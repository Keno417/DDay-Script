--// Variables
local Players = game:GetService('Players')
local RunService = game:GetService('RunService')
local UserInputService = game:GetService('UserInputService')
local Workspace = game:GetService('Workspace')

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local CurrentCamera = Workspace.CurrentCamera

local framework = require(game:GetService('ReplicatedStorage'):WaitForChild('Modules'):WaitForChild('Universal'):WaitForChild('Framework'))
local old

--// Tables
local Client = {}
local ESPDrawings = {}

--// FOV Radius
local FOVRadius = 150

--// Function to Check if Character is Visible
local function isCharacterVisible(character)
    if not character or not character:FindFirstChild('HumanoidRootPart') then
        return false
    end

    local function checkPartVisibility(part)
        if part:IsA('BasePart') and part.Transparency < 1 then
            local screenPosition, onScreen = CurrentCamera:WorldToViewportPoint(part.Position)
            if onScreen then
                local raycastParams = RaycastParams.new()
                raycastParams.FilterDescendantsInstances = {LocalPlayer.Character}
                raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
                raycastParams.IgnoreWater = true

                local raycastResult = Workspace:Raycast(LocalPlayer.Character.Head.Position, part.Position - LocalPlayer.Character.Head.Position, raycastParams)
                return not raycastResult or raycastResult.Instance:IsDescendantOf(character)
            end
        end
        return false
    end

    for _, part in ipairs(character:GetChildren()) do
        if checkPartVisibility(part) then
            return true
        end
    end

    return false
end

--// ESP Functions
local function createESP(player)
    if not ESPDrawings[player] then
        ESPDrawings[player] = Drawing.new('Line')
        ESPDrawings[player].Color = Color3.fromRGB(255, 0, 0) -- Initial color (Red for not visible)
        ESPDrawings[player].Thickness = 2
        ESPDrawings[player].Transparency = 1
        ESPDrawings[player].Visible = false
    end
end

local function updateESP()
    local mousePosition = UserInputService:GetMouseLocation()
    for player, drawing in pairs(ESPDrawings) do
        local character = player.Character
        local HumanoidRootPart = character and character:FindFirstChild('HumanoidRootPart')

        if character and HumanoidRootPart and player.Team ~= LocalPlayer.Team then
            local screenPosition, onScreen = CurrentCamera:WorldToViewportPoint(HumanoidRootPart.Position)

            if onScreen then
                drawing.From = Vector2.new(screenPosition.X, screenPosition.Y)
                drawing.To = Vector2.new(screenPosition.X, screenPosition.Y - 20) -- Adjust length as needed
                drawing.Visible = true

                -- Check if any part of the character is visible through walls
                if isCharacterVisible(character) then
                    drawing.Color = Color3.fromRGB(0, 255, 0) -- Green for visible
                else
                    drawing.Color = Color3.fromRGB(255, 0, 0) -- Red for obstructed
                end
            else
                drawing.Visible = false
            end
        else
            drawing.Visible = false
        end
    end
end

--// Silent Aim Function
local function hooked(...)
    local args = {...}
    if Client.Target and Client.Target:FindFirstChild('Head') and LocalPlayer.Character then
        local targetHeadPosition = Client.Target.Head.Position
        local targetDirection = CFrame.new(LocalPlayer.Character.Head.Position, targetHeadPosition).LookVector

        args[3] = targetDirection
    end

    return old(unpack(args))
end

--// Main Loop
RunService.PostSimulation:Connect(function()
    local MousePosition = UserInputService:GetMouseLocation()
    Client.Target = nil
    Client.TargetDistance = FOVRadius

    -- Find the nearest target with a green ESP line
    for _, player in ipairs(Players:GetPlayers()) do
        if player == LocalPlayer then continue end
        createESP(player)

        local character = player.Character
        local Humanoid = character and character:FindFirstChildWhichIsA('Humanoid')
        local HumanoidRootPart = character and character:FindFirstChild('HumanoidRootPart')

        if not Humanoid or not HumanoidRootPart or Humanoid.Health <= 0 or player.Team == LocalPlayer.Team then
            continue
        end

        local ScreenPosition, ScreenVisible = CurrentCamera:WorldToViewportPoint(HumanoidRootPart.Position)
        local MouseDistance = (MousePosition - Vector2.new(ScreenPosition.X, ScreenPosition.Y)).magnitude

        if ScreenVisible and MouseDistance < Client.TargetDistance and isCharacterVisible(character) then
            -- Update target if it is the nearest green ESP line
            if not Client.Target or MouseDistance < Client.TargetDistance then
                Client.Target
